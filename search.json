[{"path":"/CHANGELOG.html","id":null,"dir":"","previous_headings":"","what":"0.2.0","title":"0.2.0","text":"Removed meta_args argument memory_plot, replaced targets_metadata. user friendly also flexible previous API memory_plot now takes input summarise_targets process_meta profile_per_target summarise_targets","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Milton. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Milton M (2024). tarprof: Utilities profiling Targets workflows. R package version 0.2.0, https://github.com/WEHI-ResearchComputing/tarprof, https://wehi-researchcomputing.github.io/tarprof.","code":"@Manual{,   title = {tarprof: Utilities for profiling Targets workflows},   author = {Michael Milton},   year = {2024},   note = {R package version 0.2.0, https://github.com/WEHI-ResearchComputing/tarprof},   url = {https://wehi-researchcomputing.github.io/tarprof}, }"},{"path":"/index.html","id":"tarprof","dir":"","previous_headings":"","what":"Utilities for profiling Targets workflows","title":"Utilities for profiling Targets workflows","text":"can difficult estimate many resources Targets pipelines using, especially interfacing cloud HPC system. package provides utilities handle scenario.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utilities for profiling Targets workflows","text":"","code":"remotes::install_github(\"WEHI-ResearchComputing/tarprof\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Utilities for profiling Targets workflows","text":"See documentation website !","code":""},{"path":"/reference/callr_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"callr-compatible function that monitors the process's resources — callr_profile","title":"callr-compatible function that monitors the process's resources — callr_profile","text":"used value callr_function tar_make().","code":""},{"path":"/reference/callr_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"callr-compatible function that monitors the process's resources — callr_profile","text":"","code":"callr_profile(..., monitor_path, monitor_interval = 0.1)"},{"path":"/reference/callr_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"callr-compatible function that monitors the process's resources — callr_profile","text":"... Extra arguments passed processx::process constructor. monitor_path Path RDS results saved. Character scalar. monitor_interval Amount time seconds resource polls. Double vector length 1.","code":""},{"path":"/reference/callr_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"callr-compatible function that monitors the process's resources — callr_profile","text":"result function, identically standard callr function","code":""},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"/reference/memory_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the memory usage over time — memory_plot","title":"Plot the memory usage over time — memory_plot","text":"Plot memory usage time","code":""},{"path":"/reference/memory_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the memory usage over time — memory_plot","text":"","code":"memory_plot(profile, targets = process_meta())"},{"path":"/reference/memory_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the memory usage over time — memory_plot","text":"profile data frame obtained profile_data targets data frame obtained process_meta","code":""},{"path":"/reference/memory_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the memory usage over time — memory_plot","text":"ggplot object","code":""},{"path":"/reference/monitor_pid.html","id":null,"dir":"Reference","previous_headings":"","what":"Monitor a process — monitor_pid","title":"Monitor a process — monitor_pid","text":"unique Targets, may useful elsewhere. Note function ever terminate process monitoring terminates. Keep mind.","code":""},{"path":"/reference/monitor_pid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monitor a process — monitor_pid","text":"","code":"monitor_pid(pid, interval = 0.1)"},{"path":"/reference/monitor_pid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monitor a process — monitor_pid","text":"pid Pid process monitor. Integer vector length 1. interval Amount time seconds resource polls. Double vector length 1.","code":""},{"path":"/reference/monitor_pid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monitor a process — monitor_pid","text":"data frame resource results, one row per timepoint","code":""},{"path":"/reference/monitor_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Monitor a process and save the results — monitor_save","title":"Monitor a process and save the results — monitor_save","text":"Users typically need call function directly. Instead, prefer monitor_pid.","code":""},{"path":"/reference/monitor_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monitor a process and save the results — monitor_save","text":"","code":"monitor_save(path, ...)"},{"path":"/reference/monitor_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monitor a process and save the results — monitor_save","text":"path Path RDS results saved. Character scalar. ... Arguments passed monitor_pid pid Pid process monitor. Integer vector length 1. interval Amount time seconds resource polls. Double vector length 1.","code":""},{"path":"/reference/monitor_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monitor a process and save the results — monitor_save","text":"Nothing","code":""},{"path":"/reference/process_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Add some time-based variables to targets metadata — process_meta","title":"Add some time-based variables to targets metadata — process_meta","text":"Add time-based variables targets metadata","code":""},{"path":"/reference/process_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add some time-based variables to targets metadata — process_meta","text":"","code":"process_meta(targets_metadata = targets::tar_meta())"},{"path":"/reference/process_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add some time-based variables to targets metadata — process_meta","text":"targets_metadata result targets::tar_meta() pipeline interest","code":""},{"path":"/reference/process_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add some time-based variables to targets metadata — process_meta","text":"copy targets_metadata, additional columns","code":""},{"path":"/reference/process_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add some time-based variables to targets metadata — process_meta","text":"","code":"process_meta() #> No local metadata. Did you remember to run tar_meta_download()? #> Details: https://books.ropensci.org/targets/cloud-storage.html. #> (Or maybe you need to run the pipeline with tar_make()?) #> Silence this message with Sys.setenv(TAR_WARN = \"false\"). #> Error in process_meta(): No targets store could be detected. Are you sure you ran the pipeline? #> If you ran your pipeline in a directory other than the current directory, you #> need to specify the path to the store by using `memory_plot(profile_path, #> targets_metadata = targets::tar_meta(store = \"/some/path/_targets\"))`"},{"path":"/reference/profile_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the monitoring data — profile_data","title":"Read the monitoring data — profile_data","text":"Read monitoring data","code":""},{"path":"/reference/profile_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the monitoring data — profile_data","text":"","code":"profile_data(monitor_path)"},{"path":"/reference/profile_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the monitoring data — profile_data","text":"monitor_path Path directory previously passed monitor_pid. Character scalar.","code":""},{"path":"/reference/profile_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the monitoring data — profile_data","text":"Tibble containing monitoring data. row one timepoint, columns correspond various process metrics.","code":""},{"path":"/reference/profile_per_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Groups profile entries per target — profile_per_target","title":"Groups profile entries per target — profile_per_target","text":"Groups profile entries per target","code":""},{"path":"/reference/profile_per_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Groups profile entries per target — profile_per_target","text":"","code":"profile_per_target(profile, targets = process_meta())"},{"path":"/reference/profile_per_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Groups profile entries per target — profile_per_target","text":"profile data frame obtained profile_data targets data frame obtained process_meta","code":""},{"path":"/reference/profile_per_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Groups profile entries per target — profile_per_target","text":"data frame columns profile target","code":""},{"path":"/reference/summarise_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate some resources summaries for each target — summarise_targets","title":"Calculate some resources summaries for each target — summarise_targets","text":"Calculate resources summaries target","code":""},{"path":"/reference/summarise_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate some resources summaries for each target — summarise_targets","text":"","code":"summarise_targets(combined)"},{"path":"/reference/summarise_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate some resources summaries for each target — summarise_targets","text":"combined result profile_per_target","code":""},{"path":"/reference/summarise_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate some resources summaries for each target — summarise_targets","text":"summary data frame, one row per target. columns include: name: target name peak_memory: maximum memory target used peak_memory_time: time maximum memory usage reached cpu_efficiency: percentage time target used CPU","code":""}]
